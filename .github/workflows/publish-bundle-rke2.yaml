name: Publish Zarf Package

on:
  workflow_call:
    inputs:
      tag-name:
        required: true
        type: string

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  publish-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.repository }}
          ref: ${{ github.ref_name }}

      - name: Environment setup
        uses: ./.github/actions/setup

      - name: Login to Registry1
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: registry1.dso.mil
          username: ${{ secrets.IRON_BANK_ROBOT_USERNAME }}
          password: ${{ secrets.IRON_BANK_ROBOT_PASSWORD }}

      - name: Init zarf cache
        uses: actions/cache@3624ceb22c1c5a301c8db4169662070a689d9ea8 # v4
        with:
          path: "~/.zarf-cache"
          key: zarf-cache

      - name: Free GH runner build space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          df -h

      - name: Login to GHCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish rke2 bundle
        run: |
          uds run create-bundle-rke2 --set EXTRA_ARGS="--skip-sbom=false"
          uds inspect --sbom build/uds-bundle-software-factory-nutanix-rke2*.tar.zst
          uds publish build/uds-bundle-software-factory-nutanix-rke2-amd64-*.tar.zst oci://ghcr.io/defenseunicorns/uds-bundle --no-progress

      - name: Upload SBOM to Release
        id: upload-sbom-to-release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          TAG_NAME="v${{ inputs.tag-name }}"
          gh release upload "${TAG_NAME}" "$(find . -maxdepth 1 -type f -name "*-sboms.tar" -print0 | xargs -0 echo)"

      - name: Cleanup
        run: |
          uds run clean

# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/zarf/main/zarf.schema.json
kind: ZarfPackageConfig
metadata:
  name: keycloak-config-wrapper
  version: "0.0.1"

components:
  - name: keycloak-config-wrapper
    required: true
    description: Loads a local jar file into the cluster via zarf data injection.
    only:
      cluster:
        architecture: amd64
    manifests:
      #create a job from the pre-existing init image
      - name: data-loader
        namespace: keycloak
        files: 
          - init-job.yaml
    dataInjections:
      - source: .
        target:
          namespace: keycloak
          selector: app=data-loader
          container: uds-config-sync
          path: /home/nonroot
        compress: false
    actions:
      onDeploy:
        before:
          # cleanup previous attempts
          - cmd: |
              ./zarf tools kubectl delete job -n keycloak identity-config-loader 2>/dev/null || true
          
          # Check deploy system arch
          - cmd: if [ "$(uname -m)" != "x86_64" ]; then echo "this package architecture is amd64, but the target system has a different architecture. These architectures must be the same" && exit 1; fi
            description: Check that the host architecture matches the package architecture
            maxRetries: 0

          # check if any jars exist
          - cmd: |
              COUNT=`ls -1 *.jar 2>/dev/null | wc -l`
              if [ $COUNT = 0 ]; then 
                echo "No local JAR files detected -- SKIPPING CUSTOM PLUGIN LOAD"
                exit 0
              fi

        after:
          # wait for the job to finish
          - cmd: ./zarf tools wait-for job -n keycloak identity-config-loader '{.status.succeeded}'=1
          
        onSuccess:
          # bounce keycloak statefulset
          - cmd: ./zarf tools kubectl rollout restart statefulset -n keycloak keycloak

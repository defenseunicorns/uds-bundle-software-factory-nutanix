kind: ZarfPackageConfig
metadata:
  name: keycloak-config-wrapper
  version: "0.0.1"

components:
  - name: keycloak-config-wrapper
    required: true
    description: Loads jar files at deploy time into a new zarf package
    only:
      cluster:
        architecture: amd64
    manifests:
      #create a job from the pre-existing init image
      - name: data-loader
        namespace: keycloak
        files: 
          - init-job.yaml
    images:
      # renovate: datasource=github-tags depName=defenseunicorns/uds-identity-config versioning=semver 
      - "ghcr.io/defenseunicorns/uds/identity-config:0.4.3"
    actions:
      onDeploy:          
        before:  
          # Check deploy system arch
          - cmd: if [ "$(uname -m)" != "x86_64" ]; then echo "this package architecture is amd64, but the target system has a different architecture. These architectures must be the same" && exit 1; fi
            description: Check that the host architecture matches the package architecture
            maxRetries: 0
        after:
          # check for jar files (CAN EXIT EARLY)
          - cmd: |
              COUNT=`ls -1 *.jar 2>/dev/null | wc -l`
              if [ $COUNT = 0 ]; then 
                echo "No local JAR files detected -- SKIPPING CUSTOM PLUGIN LOAD"
                exit 0
              fi 

              # wait for the job to start
              ./zarf tools wait-for job -n keycloak identity-config-loader '{.status.ready}'=1

              # find the pod
              POD=$(./zarf tools kubectl get pods -n keycloak --selector app=data-loader --no-headers -o custom-columns=":metadata.name")

              # copy the jars (shouldn't matter which pod, and 0 should always exist)
              ./zarf tools kubectl cp *.jar keycloak/$POD:/home/nonroot

              # set the marker
              ./zarf tools kubectl exec -n keycloak $POD -- touch /home/nonroot/marker
        
              # wait for the job to finish
              ./zarf tools wait-for job -n keycloak identity-config-loader '{.status.succeeded}'=1
          
        onSuccess:
          # bounce keycloak statefulset
          - cmd: ./zarf tools kubectl rollout restart statefulset -n keycloak keycloak

# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/zarf/main/zarf.schema.json
kind: ZarfPackageConfig
metadata:
  name: keycloak-config-wrapper
  version: "0.0.1"

components:
  - name: keycloak-config-wrapper
    required: true
    description: >
      *** REQUIRES DOCKER ***
      Loads the required images for keycloak kustomization into Docker to be used in an offline build
    only:
      cluster:
        architecture: amd64
    files:
      # Transfer the images for docker to use in the air gap
      - source: uds-identity-config.tar
        target: tmp_deploy/uds-identity-config.tar
      - source: Dockerfile
        target: tmp_deploy/Dockerfile
      - source: zarfception.yaml
        target: tmp_deploy/zarf.yaml
    actions:
      onCreate:
        before:
          # download the pre-built base image w/ zarf pull
          # renovate: datasource=github-tags depName=defenseunicorns/uds-identity-config versioning=semver 
          - cmd: ./zarf tools registry pull --platform linux/amd64 ghcr.io/defenseunicorns/uds/identity-config:0.3.6 uds-identity-config.tar
            description: Pull the uds-identity-config image

      onDeploy:
        before:
          # cleanup output from previous attempts
          - cmd: |
              rm -rf tmp_deploy
              mkdir tmp_deploy
          
          # Check deploy system arch
          - cmd: if [ "$(uname -m)" != "x86_64" ]; then echo "this package architecture is amd64, but the target system has a different architecture. These architectures must be the same" && exit 1; fi
            description: Check that the host architecture matches the package architecture
            maxRetries: 0

          # Set the output var
          - cmd: |
              COUNT=`ls -1 *.jar 2>/dev/null | wc -l`
              if [ $COUNT = 0 ]; then 
                # no jars found -- use the base image
                # renovate: datasource=github-tags depName=defenseunicorns/uds-identity-config versioning=semver 
                echo "ghcr.io/defenseunicorns/uds/identity-config:0.3.6"
              else
                # jars were found... attempt to make a new name
                echo "custom-uds-identity-config:$(date +%Y%m%d%H%M%S)"
              fi 
            description: check for any local jar files -- SET THE KEYCLOAK IMG VAR ACCORDINGLY
            setVariables:
              - name: IDENTITY_CONFIG_IMG
          
        after:
          # check for jar files (CAN EXIT EARLY)
          - cmd: |
              COUNT=`ls -1 *.jar 2>/dev/null | wc -l`
              if [ $COUNT = 0 ]; then 
                echo "No local JAR files detected -- SKIPPING CUSTOM PLUGIN LOAD"
                exit 0
              fi 

              # move to workdir
              cp *.jar tmp_deploy/
              cd tmp_deploy

              # load the base docker image 
              docker image load -i uds-identity-config.tar

              # build the new output image
              docker build -t ${ZARF_VAR_IDENTITY_CONFIG_IMG} .

              # build the zarf wrapper wrapper (yo dawg... 'zarfception.yaml') -- collect the local image
              ./zarf package create . --confirm --set LOCAL_IMG=${ZARF_VAR_IDENTITY_CONFIG_IMG}

              # deploy the zarf wrapper for the local image
              ./zarf package deploy zarf-package*.tar.zst --confirm --set IMG=${ZARF_VAR_IDENTITY_CONFIG_IMG}
        
        # CLEANUP attempted deploys
        onSuccess:
          - cmd: rm -rf tmp_deploy
        onFailure:
          - cmd: rm -rf tmp_deploy
# Default values for nutanix-csi-storage.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# parameters

# Legacy mode
#
# if legacy set to true we keep the old reverse domain notation for CSI driver name (com.nutanix.csi).
# need to be set to true only if upgrade and initialy installed with helm package before 2.2.x
legacy: false

# Openshift settings
#

openshift:
  scc: false
  masterIscsiConfig: false
  workerIscsiConfig: false

# kubeletDir allows overriding the host location of kubelet's internal state.
kubeletDir: "/var/lib/kubelet"

# Global Settings for all pods

nodeSelector: {}
tolerations: []
imagePullPolicy: IfNotPresent

## If you have any image pull secrets you can add it here
imagePullSecrets:
  - name: ###ZARF_VAR_IMAGE_PULL_SECRET###

volumeSnapshotClassName: "nutanix-snapshot-class"
# volumeSnapshotClassAnnotations: {}
# volumeSnapshotClassLabels: {}

createPrismCentralSecret: true
prismCentralEndPoint: ###ZARF_VAR_PRISM_CENTRAL_ENDPOINT###
pcUsername: ###ZARF_VAR_PRISM_CENTRAL_USERNAME###
pcPassword: ###ZARF_VAR_PRISM_CENTRAL_PASSWORD###

## fully qualified domain name (FQDN) or the cluster virtual IP address (if one is not configured, use the virtual IP address of any Controller VM in the cluster).
prismEndPoint: ###ZARF_VAR_PRISM_ENDPOINT###
prismPort: 9440

## username of the Prism Element (PE) cluster admin
username: ###ZARF_VAR_PRISM_USERNAME###

## password for the PE cluster admin.
password: ###ZARF_VAR_PRISM_PASSWORD###

## secret name that stores Nutanix cluster credentials
peSecretName: ntnx-secret

## Nutanix Prism Elements Existing Secret
#

# if set to false a new secret will not be created
createSecret: true

# Volume metrics and CSI operations metrics configuration
#

servicemonitor:
  enabled: false
  labels:
    # This should match the serviceMonitorSelector logic configured
    # on the prometheus.
    k8s-app: csi-driver

# Pod pecific Settings
#

controller:
  replicas: 2
  imageRepo: docker.io/nutanix
  imageName: ntnx-csi
  tag: 3.0.0
  nodeSelector: {}
  tolerations: []
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 200m
      memory: 200Mi

node:
  imageRepo: docker.io/nutanix
  imageName: ntnx-csi
  tag: 3.0.0
  nodeSelector:
    kubernetes.io/os: linux
  tolerations: []
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 200m
      memory: 200Mi

precheck:
  image: docker.io/nutanix/ntnx-csi-precheck:3.0.0

sidecars:
  registrar:
    image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.11.1
  provisioner:
    image: registry.k8s.io/sig-storage/csi-provisioner:v5.0.1
    imageLegacy: registry.k8s.io/sig-storage/csi-provisioner:v2.2.2
  attacher:
    image: registry.k8s.io/sig-storage/csi-attacher:v4.4.3
  snapshotter:
    image: registry.k8s.io/sig-storage/csi-snapshotter:v8.0.1
    imageBeta: registry.k8s.io/sig-storage/csi-snapshotter:v3.0.3
    # set it to true, if external-snapshotter sidecar should be deployed along with controller.
    deploy: true
  resizer:
    image: registry.k8s.io/sig-storage/csi-resizer:v1.11.2
  livenessprobe:
    image: registry.k8s.io/sig-storage/livenessprobe:v2.13.1
  healthmonitor:
    image: registry.k8s.io/sig-storage/csi-external-health-monitor-controller:v0.10.0

# Used for deployment test in kind cluster
#

kindtest: false

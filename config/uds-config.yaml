options:
  log_level: info
shared:
  DOMAIN: replace.with.your.domain
  # ADDITIONAL_CA_CHAIN value must be base64 encoded
  ADDITIONAL_CA_CHAIN: replace-me-with-additional-ca-chain
variables:
  init:
    REGISTRY_HPA_ENABLE: false
    REGISTRY_PVC_ENABLED: false
    REGISTRY_PVC_SIZE: 128Gi
    REGISTRY_PVC_ACCESS_MODE: ReadWriteMany
    REGISTRY_HPA_AUTO_SIZE: false
    REGISTRY_REPLICA_COUNT: 3
    REGISTRY_AFFINITY_CUSTOM: |
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - docker-registry
              topologyKey: kubernetes.io/hostname
    #Configure zarf registry to use s3 backend. REGISTRY_STORAGE_REDIRECT_DISABLE can be set to false if S3 bucket is accessible and trusted from host that the uds deploy is run from
    REGISTRY_EXTRA_ENVS: |
      - name: REGISTRY_STORAGE
        value: s3
      - name: REGISTRY_STORAGE_S3_REGION
        value: us-east-1
      - name: REGISTRY_STORAGE_S3_REGIONENDPOINT
        value: nutanix.object.store.hostname
      - name: REGISTRY_STORAGE_S3_SECURE
        value: "true"
      - name: REGISTRY_STORAGE_S3_BUCKET
        value: env-zarf-registry-bucket
      - name: REGISTRY_STORAGE_S3_ACCESSKEY
        value: access-key-id
      - name: REGISTRY_STORAGE_S3_SECRETKEY
        value: access-key-value
      - name: REGISTRY_STORAGE_REDIRECT_DISABLE
        value: "true"
    REGISTRY_CA_BUNDLE: |
      -----BEGIN CERTIFICATE-----
      cert contents
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      other cert contents
      -----END CERTIFICATE-----
  nutanix-csi:
    PRISM_CENTRAL_ENDPOINT: "Prism Central IP address or hostname"
    PRISM_CENTRAL_USERNAME: "csi-user-prism-central"
    PRISM_CENTRAL_PASSWORD: "csiâ€“user-prism-central-password"
    PRISM_ENDPOINT: "Prism element IP address"
    PRISM_USERNAME: "csi-user-prism-element-user"
    PRISM_PASSWORD: "csi-user-passoword"
    STORAGE_CONTAINER: "nutanix-storage-container"
    DYNAMIC_FILE_STORE_NAME: "nutanix-file-server-name"
  metallb:
    # Replace with a valid IP address range
    IP_ADDRESS_POOL: "10.0.0.10-10.0.0.20"
  core:
    # TLS CERT and KEY values must be base64 encoded
    ADMIN_TLS_CERT: replace-me-cert
    ADMIN_TLS_KEY: replace-me-key
    TENANT_TLS_CERT: replace-me-cert
    TENANT_TLS_KEY: replace-me-key
    KEYCLOAK_DB_USERNAME: "postgres"
    KEYCLOAK_DB_PASSWORD: "replace-me-db-passwords"
    KEYCLOAK_DB_NAME: "keycloakdb"
    KEYCLOAK_DB_ENDPOINT: "keycloak-pg.replace.with.db.url"
    KEYCLOAK_INSECURE_ADMIN_PASSWORD_GENERATION: true
    LOKI_CHUNKS_BUCKET: "loki-chunks-bucket"
    LOKI_RULER_BUCKET: "loki-ruler-bucket"
    LOKI_ADMIN_BUCKET: "loki-admin-bucket"
    LOKI_S3_ENDPOINT: "http://replace.with.object.store.url"
    LOKI_S3_REGION: "us-east-1"
    LOKI_S3_ACCESS_KEY_ID: "replace-me-object-store-access-key"
    LOKI_S3_SECRET_ACCESS_KEY: "replace-me-object-store-secret-key"
    VELERO_BUCKET_PROVIDER_URL: "http://replace.with.object.store.url"
    VELERO_BUCKET: "velero-bucket"
    VELERO_BUCKET_REGION: "us-east-1"
    VELERO_BUCKET_KEY: "replace-me-object-store-access-key"
    VELERO_BUCKET_KEY_SECRET: "replace-me-object-store-secret-key"
  gitlab-database-secret:
    GITLAB_DB_PASSWORD: "replace-me-db-passwords"
  gitlab-object-store:
    ENDPOINT: "http://replace.with.object.store.url"
    ACCESS_KEY: "replace-me-object-store-access-key"
    SECRET_KEY: "replace-me-object-store-secret-key"
  gitlab:
    GITLAB_DB_NAME: "gitlabdb"
    GITLAB_DB_USERNAME: "postgres"
    GITLAB_DB_ENDPOINT: "gitlab-pg.replace.with.db.url"
    GITLAB_PAGES_ENABLED: "true"
    GITLAB_SIGNUP_ENABLED: "false"
    GITLAB_BACKUP_SCHEDULE: "0 3 * * *"
    GITLAB_BACKUP_EXTRA_ARGS: "--skip artifiacts,registry"
    BUCKET_SUFFIX: ""
    WEBSERVICE_REPLICAS: 3
    WEBSERVICE_WORKERS: 4
    WEBSERVICE_HPA:
      cpu:
        targetAverageValue: 1600m
    WEBSERVICE_RESOURCES:
      limits:
        cpu: 8000m
        memory: 8G
      requests:
        cpu: 4000m
        memory: 5G
    MIGRATIONS_RESOURCES:
      limits:
        cpu: 500m
        memory: 4G
    WORKHORSE_RESOURCES:
      limits:
        memory: 100M
      requests:
        cpu: 10m
        memory: 10M
    SIDEKIQ_REPLICAS: 3
    SIDEKIQ_HPA:
      cpu:
        targetAverageValue: 700m
    SIDEKIQ_RESOURCES:
      limits:
        cpu: 2000m
        memory: 4G
      requests:
        cpu: 1000m
        memory: 2G
    GITALY_RESOURCES:
      limits:
        cpu: 4000m
        memory: 15G
      requests:
        cpu: 4000m
        memory: 15G
    REGISTRY_REPLICAS: 2
    SHELL_REPLICAS: 2
  sonarqube-database-secret:
    SONARQUBE_DB_PASSWORD: "replace-me-db-passwords"
  sonarqube:
    # db config
    SONARQUBE_DB_NAME: "sonarqubedb"
    SONARQUBE_DB_USERNAME: "postgres"
    SONARQUBE_DB_ENDPOINT: "sonarqube-pg.replace.with.db.url"
  jira:
    JIRA_DB_NAME: "jiradb"
    JIRA_DB_USERNAME: "postgres"
    JIRA_DB_PASSWORD: "replace-me-db-passwords"
    JIRA_DB_ENDPOINT: "jira-pg.replace.with.db.url"
  confluence-database-secret:
    CONFLUENCE_DB_PASSWORD: "replace-me-db-passwords"
  confluence:
    CONFLUENCE_DB_NAME: "confluencedb"
    CONFLUENCE_DB_USERNAME: "postgres"
    CONFLUENCE_LOCAL_HOME_ENABLED: "true"
    CONFLUENCE_LOCAL_HOME_SIZE: "128Gi"
    CONFLUENCE_DB_ENDPOINT: "confluence-pg.replace.with.db.url"
  mattermost:
    ACCESS_KEY: "replace-me-object-store-access-key"
    SECRET_KEY: "replace-me-object-store-secret-key"
    DB_PASSWORD: "replace-me-db-passwords"
    DB_USERNAME: "postgres"
    DB_NAME: "mattermostdb"
    DB_ENDPOINT: "mattermost-pg.replace.with.db.url"
    DB_OPTIONS: "?connect_timeout=10&sslmode=disable"
    OBJECT_STORE_SECURE: "false"
    OBJECT_STORE_ENDPOINT: "replace.with.object.store.url"
    OBJECT_STORE_BUCKET: "mattermost-bucket"
    OBJECT_STORE_REGION: "us-east-1"
    VOLUME_MOUNTS:
      - name: ca-cert
        mountPath: /etc/ssl/certs
        readOnly: true
    VOLUMES:
      - name: ca-cert
        secret:
          secretName: ca-secret
          defaultMode: 0644
  nexus:
    NEXUS_DB_NAME: "nexusdb"
    NEXUS_DB_USERNAME: "postgres"
    NEXUS_DB_ENDPOINT: "nexus-pg.replace.with.db.url"
    NEXUS_DB_PASSWORD: "replace-me-db-passwords"
    # SSO requires a license
    NEXUS_SSO_ENABLED: false
    NEXUS_LICENSE_KEY: ""


# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/uds-cli/v0.10.4/uds.schema.json
kind: UDSBundle
metadata:
  name: software-factory-nutanix
  description: A UDS bundle for deploying a software factory to an RKE2 cluster
  # x-release-please-start-version
  version: "0.2.12"
  # x-release-please-end
  architecture: amd64

packages:
  # Zarf init
  - name: init
    path: ../../build
    optionalComponents:
      - git-server
    ref: v0.33.0
    overrides:
      zarf-seed-registry:
        docker-registry:
          variables:
            - name: REGISTRY_STORAGE_CLASS
              path: persistence.storageClass
              default: "nutanix-dynamicfile"
      zarf-registry:
        docker-registry:
          variables:
            - name: REGISTRY_STORAGE_CLASS
              path: persistence.storageClass
              default: "nutanix-dynamicfile"

  # Namespace pre-reqs for swf capabilities
  - name: software-factory-namespaces
    path: ../../build
    ref: 1.0.0

  # MetalLB
  - name: metallb
    repository: ghcr.io/defenseunicorns/packages/metallb
    ref: 0.0.5-amd64

  - name: core
    repository: ghcr.io/defenseunicorns/packages/uds/core
    ref: 0.22.0-registry1
    overrides:
      kube-prometheus-stack:
        kube-prometheus-stack:
          values:
            - path: kube-state-metrics.resources
              value:
                limits:
                  cpu: 500m
                  memory: 512Mi
                requests:
                  cpu: 20m
                  memory: 128Mi
      velero:
        velero:
          values:
            - path: initContainers
              value:
                - name: velero-plugin-for-aws
                  image: registry1.dso.mil/ironbank/opensource/velero/velero-plugin-for-aws:v1.9.2
                  imagePullPolicy: IfNotPresent
                  volumeMounts:
                    - mountPath: /target
                      name: plugins
                - name: velero-plugin-for-csi
                  image: registry1.dso.mil/ironbank/opensource/velero/velero-plugin-for-csi:v0.7.0
                  imagePullPolicy: IfNotPresent
                  volumeMounts:
                    - mountPath: /target
                      name: plugins
            - path: configuration.features
              value: EnableCSI
            - path: snapshotsEnabled
              value: true
            - path: configuration.volumeSnapshotLocation
              value:
                - name: default
                  provider: aws
                  config:
                    region: "us-east-1"
                  credential:
                    name: "velero-bucket-credentials"
                    key: "cloud"
            - path: schedules
              value:
                uds-jira-backup:
                  disabled: false
                  schedule: "0 3 * * *"
                  useOwnerReferencesInBackup: false
                  template:
                    csiSnapshotTimeout: 0s
                    includeClusterResources: true
                    snapshotVolumes: true
                    includedNamespaces:
                      - jira
                    ttl: "240h"
                uds-confluence-backup:
                  disabled: false
                  schedule: "0 3 * * *"
                  useOwnerReferencesInBackup: false
                  template:
                    csiSnapshotTimeout: 0s
                    includeClusterResources: true
                    snapshotVolumes: true
                    includedNamespaces:
                      - confluence
                    ttl: "240h"
                uds-mattermost-backup:
                  disabled: false
                  schedule: "0 3 * * *"
                  useOwnerReferencesInBackup: false
                  template:
                    csiSnapshotTimeout: 0s
                    includeClusterResources: true
                    snapshotVolumes: true
                    includedNamespaces:
                      - mattermost
                    ttl: "240h"
                uds-nexus-backup:
                  disabled: false
                  schedule: "0 3 * * *"
                  useOwnerReferencesInBackup: false
                  template:
                    csiSnapshotTimeout: 0s
                    includeClusterResources: true
                    snapshotVolumes: true
                    includedNamespaces:
                      - nexus
                    ttl: "240h"
                uds-gitlab-backup:
                  disabled: false
                  schedule: "0 3 * * *"
                  useOwnerReferencesInBackup: false
                  template:
                    csiSnapshotTimeout: 0s
                    includeClusterResources: true
                    snapshotVolumes: true
                    includedNamespaces:
                      - gitlab
                    ttl: "240h"
      keycloak:
        keycloak:
          values:
            # TODO - test/debug
            # - path: "devMode"
            #   value: "false"
            # - path: "autoscaling.enabled"
            #   value: "true"
            - path: "persistence.providers.enabled"
              value: "true"
            - path: "persistence.accessMode"
              value: "ReadWriteMany"
            - path: "persistence.storageClassName"
              value: "nutanix-dynamicfile"
          variables:
            - name: KEYCLOAK_DB_USERNAME
              description: "keycloak database username"
              path: postgresql.username
              default: "postgres"
            - name: KEYCLOAK_DB_PASSWORD
              description: "keycloak database password"
              path: postgresql.password
              default: "replace-me"
            - name: KEYCLOAK_DB_NAME
              description: "keycloak database name"
              path: postgresql.database
              default: "keycloakdb"
            - name: KEYCLOAK_DB_ENDPOINT
              description: "keycloak database name"
              path: postgresql.host
              default: "postgresql"
            - name: KEYCLOAK_INSECURE_ADMIN_PASSWORD_GENERATION
              description: "Generate an insecure admin password for dev/test"
              path: insecureAdminPasswordGeneration.enabled
      loki:
        loki:
          values:
            # Override default dns service name for Loki Gateway
            - path: "global.dnsService"
              value: "rke2-coredns-rke2-coredns"
          variables:
            - name: LOKI_CHUNKS_BUCKET
              description: "The object storage bucket for Loki chunks"
              path: loki.storage.bucketNames.chunks
              default: "loki-chunks-bucket"
            - name: LOKI_RULER_BUCKET
              description: "The object storage bucket for Loki ruler"
              path: loki.storage.bucketNames.ruler
              default: "loki-ruler-bucket"
            - name: LOKI_ADMIN_BUCKET
              description: "The object storage bucket for Loki admin"
              path: loki.storage.bucketNames.admin
              default: "loki-admin-bucket"
            - name: LOKI_S3_ENDPOINT
              description: "The S3 endpoint"
              path: loki.storage.s3.endpoint
            - name: LOKI_S3_REGION
              description: "The S3 region"
              path: loki.storage.s3.region
            - name: LOKI_S3_ACCESS_KEY_ID
              description: "The S3 Access Key ID"
              path: loki.storage.s3.accessKeyId
            - name: LOKI_S3_SECRET_ACCESS_KEY
              path: loki.storage.s3.secretAccessKey
              description: "The S3 Secret Access Key"
            - name: LOKI_WRITE_REPLICAS
              path: write.replicas
              description: "Loki write replicas"
              default: "1"
            - name: LOKI_READ_REPLICAS
              path: read.replicas
              description: "Loki read replicas"
              default: "1"
            - name: LOKI_BACKEND_REPLICAS
              path: backend.replicas
              description: "Loki backend replicas"
              default: "1"
      istio-admin-gateway:
        uds-istio-config:
          variables:
            - name: ADMIN_TLS_CERT
              description: "The TLS cert for the admin gateway (must be base64 encoded)"
              path: tls.cert
            - name: ADMIN_TLS_KEY
              description: "The TLS key for the admin gateway (must be base64 encoded)"
              path: tls.key
      istio-tenant-gateway:
        gateway:
          values:
            - path: "service.ports"
              value:
                - name: status-port
                  port: 15021
                  protocol: TCP
                  targetPort: 15021
                - name: http2
                  port: 80
                  protocol: TCP
                  targetPort: 80
                - name: https
                  port: 443
                  protocol: TCP
                  targetPort: 443
                - name: tcp-ssh
                  port: 22
                  protocol: TCP
                  targetPort: 2022
        uds-istio-config:
          variables:
            - name: TENANT_TLS_CERT
              description: "The TLS cert for the tenant gateway (must be base64 encoded)"
              path: tls.cert
            - name: TENANT_TLS_KEY
              description: "The TLS key for the tenant gateway (must be base64 encoded)"
              path: tls.key

  # NOTE -- depends on hardcoded PVC name(s) in core.keycloak
  - name: keycloak-config-wrapper
    path: ../../build
    ref: 0.0.1

  # Additional manifests needed
  - name: additional-manifests
    path: ../../build
    ref: 0.0.2

  # Additional manifests needed (TODO - remove)
  - name: additional-manifests-2
    path: ../../build
    ref: 0.0.2

  # Gitlab
  - name: gitlab-redis
    repository: ghcr.io/defenseunicorns/packages/uds/dev-redis
    ref: 0.0.2

  - name: gitlab-redis-secret
    path: ../../build
    ref: 0.0.1

  - name: gitlab-object-store
    path: ../../build
    ref: 0.0.1

  - name: gitlab-database-secret
    path: ../../build
    ref: 0.0.1

  - name: gitlab
    repository: ghcr.io/defenseunicorns/packages/uds/gitlab
    ref: 17.0.1-uds.1-registry1
    overrides:
      gitlab:
        uds-gitlab-config:
          values:
            - path: storage.internal
              value: false
            - path: postgres.internal
              value: false
            - path: redis
              value: 
                internal: true
                selector:
                  app.kubernetes.io/instance: redis
                namespace: dev-redis
                port: 6379
        gitlab:
          values:
            - path: global.certificates.customCAs
              value:
                - secret: ca-secret
            - path: gitlab.webservice.init.containerSecurityContext
              value:
                fsGroup: 65534
                runAsGroup: 65534
                runAsNonRoot: true
                runAsUser: 65534
          variables:
            - name: MIGRATIONS_RESOURCES
              description: "Gitlab Migrations Resources"
              path: "gitlab.migrations.resources"
            - name: WEBSERVICE_REPLICAS
              description: "Gitlab Webservice Min Replicas"
              path: "gitlab.webservice.minReplicas"
            - name: WEBSERVICE_WORKERS
              description: "Gitlab Webservice Worker Count"
              path: "gitlab.webservice.workerProcesses"
            - name: WEBSERVICE_HPA
              description: "Gitlab Webservice HPA settings"
              path: "gitlab.webservice.hpa"
            - name: WEBSERVICE_RESOURCES
              description: "Gitlab Webservice Resources"
              path: "gitlab.webservice.resources"
            - name: WORKHORSE_RESOURCES
              description: "Gitlab Workhorse Resources"
              path: "gitlab.webservice.workhorse.resources"
            - name: SIDEKIQ_REPLICAS
              description: "Gitlab Sidekiq Min Replicas"
              path: "gitlab.sidekiq.minReplicas"
            - name: SIDEKIQ_HPA
              description: "Gitlab Sidekiq HPA settings"
              path: "gitlab.sidekiq.hpa"
            - name: SIDEKIQ_RESOURCES
              description: "Gitlab Sidekiq Resources"
              path: "gitlab.sidekiq.resources"
            - name: GITALY_RESOURCES
              description: "Gitlab Gitaly Resources"
              path: "gitlab.gitaly.resources"
            - name: REGISTRY_REPLICAS
              description: "Gitlab Registry Min Replicas"
              path: "registry.hpa.minReplicas"
            - name: SHELL_REPLICAS
              description: "Gitlab Shell Min Replicas"
              path: "gitlab.gitlab-shell.minReplicas"

  # Gitlab Runner
  - name: gitlab-runner
    repository: ghcr.io/defenseunicorns/packages/uds/gitlab-runner
    ref: 16.11.0-uds.0-registry1
    
  ### TODO - uncomment to replace functionality post MVP

  # # Sonarqube
  # - name: sonarqube-database-secret
  #   path: ../../build
  #   ref: 0.0.1

  # - name: sonarqube
  #   repository: ghcr.io/defenseunicorns/packages/uds/sonarqube
  #   ref: 8.0.3-uds.6-registry1

  # # Jira
  # - name: jira-database-secret
  #   path: ../../build
  #   ref: 0.0.1

  # - name: jira
  #   repository: ghcr.io/defenseunicorns/packages/uds/jira
  #   ref: 1.19.0-uds.0-registry1
  #   overrides:
  #     jira:
  #       jira:
  #         variables:
  #           - name: JIRA_LOCAL_HOME_ENABLED
  #             path: "volumes.localHome.persistentVolumeClaim.create"
  #             description: "Local Home Toggle"
  #             default: "true"
  #           - name: JIRA_RWO_STORAGE_CLASS
  #             path: "volumes.localHome.persistentVolumeClaim.storageClassName"
  #             description: "RWO storage class name"
  #           - name: JIRA_LOCAL_HOME_SIZE
  #             path: "volumes.localHome.persistentVolumeClaim.resources.requests.storage"
  #             description: "Storage size"
  #             default: "128Gi"

  # # Confluence
  # - name: confluence-database-secret
  #   path: ../../build
  #   ref: 0.0.1

  # - name: confluence
  #   repository: ghcr.io/defenseunicorns/packages/uds/confluence
  #   ref: 1.18.0-uds.0-registry1
  #   overrides:
  #     confluence:
  #       confluence:
  #         variables:
  #           - name: CONFLUENCE_LOCAL_HOME_ENABLED
  #             path: "volumes.localHome.persistentVolumeClaim.create"
  #             description: "Local Home Toggle"
  #             default: "true"
  #           - name: CONFLUENCE_RWO_STORAGE_CLASS
  #             path: "volumes.localHome.persistentVolumeClaim.storageClassName"
  #             description: "RWO storage class name"
  #           - name: CONFLUENCE_LOCAL_HOME_SIZE
  #             path: "volumes.localHome.persistentVolumeClaim.resources.requests.storage"
  #             description: "Storage size"
  #             default: "128Gi"

  # # Mattermost
  # - name: mattermost
  #   repository: ghcr.io/defenseunicorns/packages/uds/mattermost
  #   ref: 9.7.2-uds.0-registry1
  #   overrides:
  #     mattermost:
  #       mattermost-enterprise-edition:
  #         variables:
  #           - name: VOLUMES
  #             path: "mattermostApp.extraVolumes"
  #             description: "Used to mount ca certs"
  #           - name: VOLUME_MOUNTS
  #             path: "mattermostApp.extraVolumeMounts"
  #             description: "Used to mount ca certs"
  #       uds-mattermost-config:
  #         variables:
  #           - name: OBJECT_STORE_SECURE
  #             path: "objectStorage.secure"
  #             description: "Object storage ssl"
  #             default: "false"
  #           - name: OBJECT_STORE_ENDPOINT
  #             path: "objectStorage.endpoint"
  #             description: "Object storage endpoint"
  #           - name: OBJECT_STORE_BUCKET
  #             path: "objectStorage.bucket"
  #             description: "Object storage bucket"
  #             default: "mattermost-bucket"
  #           - name: OBJECT_STORE_REGION
  #             path: "objectStorage.region"
  #             description: "Object storage region"
  #             default: "us-east-1"
  #           - name: DB_ENDPOINT
  #             path: "postgres.host"
  #             description: "Postgres DB endpoint"
  #           - name: DB_USERNAME
  #             path: "postgres.username"
  #             description: "Postgres DB username"
  #             default: "postgres"
  #           - name: DB_NAME
  #             path: "postgres.dbName"
  #             description: "Postgres DB database name"
  #             default: "mattermostdb"
  #           - name: DB_OPTIONS
  #             path: "postgres.connectionOptions"
  #             description: "Postgres DB connection options"
  #             default: "?connect_timeout=10"

  # Nexus
  - name: nexus
    repository: ghcr.io/defenseunicorns/packages/uds/nexus
    ref: 3.66.0-uds.1-registry1
